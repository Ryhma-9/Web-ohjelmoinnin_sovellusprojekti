{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kasperi\\\\Web-ohjelmoinnin_sovellusprojekti\\\\clientApp\\\\src\\\\components\\\\MenuBrowser.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Shop.css';\nimport { useEffect, useState } from 'react';\nimport Header from './Header';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faXmark, faBasketShopping, faInfo } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MenuBrowser(props) {\n  _s();\n\n  let selectedCity = props.city;\n  let selectedRestaurant = props.restaurant.name;\n  let menuCategories = ['appetizer', 'main dish', 'dessert', 'drink', 'extras', 'other']; // tuotekategoriat, jonka mukaan asettelu on rakennettu. Tuotteet tulostetaan kategoriossa taulukon järjestyksessä\n\n  const [categoryQty, setCategoryQty] = useState(1); // En varmaan vaan osaa, mut joutu tekemään tän Vakioannostyypien määrälle. categoryQty > 1 on tuotekategorioiden filtteröinti käytössä\n\n  const [menu, setMenu] = useState([]); // Tähän asetetaan näytölle tulostettavat annokset\n\n  const [menuCategory, setMenuCategory] = useState([]); // Ja tähän tuotekategoriat. Tätä käytetään myös tuotekategorioiden filtteröintiin  \n  // Hakutoiminnon eventhandler-funktio. Funktiolla tällä hetkellä päivitetään hardkoodatuista ravintoloista suoritettu haku headerin hakukenttään annetun teksin perusteella\n\n  const searchHandler = searchBarText => {\n    getData().then(function (res) {\n      setMenu(searchEngine(res, searchBarText));\n    });\n  }; // Hakufunktio, jolla haetaan siihen syötetyn tietueen oliot, joiden arvoista löytyy annettu hakusana\n\n\n  const searchEngine = (items, searchArgument) => {\n    var search = searchArgument.toString().toLowerCase().trim();\n    var searchResult = items.filter(item => {\n      return Object.keys(item).some(key => item[key].toString().toLowerCase().includes(search));\n    });\n    return searchResult;\n  }; // Tuotteiden valinnan toimintojen hahmottelua\n\n\n  const [shoppingCartItems, setShoppingCartItems] = useState([]); // Funktio, jolla lisätään tuote ostoskoriin tai jos tuote on jo korissa lisätään sen määrää\n\n  const shoppingCartTesting = item => {\n    let newShoppingCartItems = [...shoppingCartItems];\n    let itemClickedIndex = newShoppingCartItems.findIndex(i => item.productId === i.productId);\n\n    if (itemClickedIndex !== -1) {\n      let newElement = { ...newShoppingCartItems[itemClickedIndex]\n      };\n      newElement.qty += 1;\n      newShoppingCartItems[itemClickedIndex] = newElement;\n    } else {\n      let newElement = [...newShoppingCartItems, {\n        id: shoppingCartItems.length + 1,\n        productId: item.productId,\n        name: item.productName,\n        price: item.price,\n        qty: 1\n      }];\n      newShoppingCartItems = newElement;\n    }\n\n    setShoppingCartItems(newShoppingCartItems);\n    console.log(item.productName + \" added to cart\");\n    console.log(newShoppingCartItems);\n  }; // Ehkä tyhmä idea, mutta jotta saa näkymän toiminnot toimimaan oikeen käytetään funktion omaa statehookkia ja päivitetään ostoskori vain hallitusti App.js:ään\n\n\n  function passShoppingCartToApp() {\n    props.addItemsToCart(shoppingCartItems);\n  } // Liittyy edelliseen funktioon. Näkymän vaihdon yhteydessä päivitetään ostoskorin sisältö App.js\n\n\n  const headerButtonHandler = buttonValue => {\n    passShoppingCartToApp();\n    props.headerButtons(buttonValue);\n  }; // Näkymän ensimäisen renderöinnin yhteydessä haetaan valitun ravintolan ruokalista, tuotekategoriat, ostoskorin sisältö App.js:stä ja tallennetaan ne useState-hookkeihin\n\n\n  useEffect(() => {\n    getData().then(setMenu);\n    getData().then(listCategories).then(setMenuCategory);\n    setShoppingCartItems(props.shoppingCart);\n    getData().then(listCategories).then(res => {\n      setCategoryQty(res.length);\n    });\n  }, []); // Funktiolla tullaan hakemaan tietokannasta valitun ravintolan menu / tiedot. Testivaiheessa vähän oiotaan mutkia\n\n  async function getData() {\n    //const results = await axios.get('http://rajapinnanOsoite/'+props.restaurant.restaurantId);\n    return props.restaurant.menu;\n  } // Listataan menun tuotekategoriat\n\n\n  function listCategories(data) {\n    let menuCategoryList = [];\n    let categoryList = new Set();\n    data.map(item => {\n      return categoryList.add(item.type);\n    });\n\n    for (const x of categoryList.values()) {\n      if (menuCategories.includes(x.toLowerCase())) {\n        menuCategoryList.push(x.toLowerCase());\n      } else if (menuCategoryList.includes(!'Other')) {\n        menuCategoryList.push('Other');\n      }\n    }\n\n    return menuCategoryList;\n  } // Funktiolla lisätään headeriin valintojen postonapit sekä napit menufilttereille\n\n\n  const manageHeaderContent = props => {\n    // Luodaan napit filtteröintiin ja sen poistoon\n    function manageFilterButtons() {\n      if (menuCategory.length === 1 && categoryQty > 1) {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"styleButton\",\n          type: \"button\",\n          onClick: () => getData().then(listCategories).then(setMenuCategory),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [menuCategory[0], \" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              style: {\n                color: 'crimson'\n              },\n              icon: faXmark\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this);\n      } else if (menuCategory.length > 1 || categoryQty > 1) {\n        return menuCategories.map((item, index) => {\n          return menuCategory.includes(item) ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"styleButton\",\n            type: \"button\",\n            onClick: () => setMenuCategory([item]),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this) : null;\n        });\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"styleButton\",\n        type: \"button\",\n        onClick: () => removeSelection(\"city\"),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [selectedCity, \" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            style: {\n              color: 'crimson'\n            },\n            icon: faXmark\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cityButton\",\n        type: \"button\",\n        onClick: () => removeSelection(\"restaurant\"),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [selectedRestaurant, \" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            style: {\n              color: 'crimson'\n            },\n            icon: faXmark\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"restaurantStyleButtons flex\",\n        children: manageFilterButtons()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  }; // Viritelmä valintojen poistoa varten\n\n\n  const removeSelection = item => {\n    if (shoppingCartItems.length > 0) {\n      // Jos ostoskoriin on lisätty tavaraa, se tyhjennettään jos peruutetaan ravintola-/kaupinkivalinta\n      alert(\"Ostoskori on tyhjennetty\");\n      props.addItemsToCart([]);\n    }\n\n    switch (item) {\n      case 'city':\n        props.unSelectCity(\"\");\n        return;\n\n      case 'restaurant':\n        props.unSelectRestaurant(\"\");\n        return;\n\n      default:\n        return console.log(\"react ei ehkä ookkaan niin mukavaa\");\n    }\n  }; // Täällä tapahtuu itse ruokalistan käsittely ja \"tulostaminen\"\n\n\n  const MenuItemHandler = () => {\n    const AddToShopingcart = props => {\n      // Tässä luodaan lisää ostoskoriin nappi\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menuHandlebutton\",\n        onClick: () => shoppingCartTesting(props.productInfo),\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\" Add to Cart \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faBasketShopping\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 28\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this);\n    };\n\n    const AllergyInfo = props => {\n      // Tässä allergiainfo.  Tulostetaan lihenteet tuotteen allergioista ja nappi jolla tulostetaan lyhenbteiden selitykset\n      function printAllergyIcon(allergy) {\n        switch (allergy) {\n          case 1:\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"allergyIcon\",\n              children: \" CE \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 20\n            }, this);\n\n          case 2:\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"allergyIcon\",\n              children: \" CR \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 20\n            }, this);\n\n          case 3:\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"allergyIcon\",\n              children: \" E \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 20\n            }, this);\n\n          case 4:\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"allergyIcon\",\n              children: \" F \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 20\n            }, this);\n\n          case 5:\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"allergyIcon\",\n              children: \" G \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 20\n            }, this);\n\n          case 6:\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"allergyIcon\",\n              children: \" L \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 20\n            }, this);\n\n          case 7:\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"allergyIcon\",\n              children: \" MI \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 20\n            }, this);\n\n          case 8:\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"allergyIcon\",\n              children: \" MO \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 20\n            }, this);\n\n          case 9:\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"allergyIcon\",\n              children: \" MU \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 20\n            }, this);\n\n          case 10:\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"allergyIcon\",\n              children: \" P \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 20\n            }, this);\n\n          case 11:\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"allergyIcon\",\n              children: \" SE \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 20\n            }, this);\n\n          case 12:\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"allergyIcon\",\n              children: \" SO \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 20\n            }, this);\n\n          case 13:\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"allergyIcon\",\n              children: \" SU \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 20\n            }, this);\n\n          case 14:\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"allergyIcon\",\n              children: \" T \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 20\n            }, this);\n\n          default:\n            return null;\n        }\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"marginL200 flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Allergy information: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), props.productInfo.map(item => {\n          return printAllergyIcon(item);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"allergyInfoIcon\",\n          onClick: () => setAllergyInfoVisibility(!allergyInfoVisibility),\n          children: [\" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfo,\n            size: \"1x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 111\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this);\n    };\n\n    const ProductInfoButton = props => {\n      // Tulostetaan lisäinfonappi. Nappia painamalla asetetaa lisäinfo näkyväksi ja asetetaan statehookkiin tuotteen lisätiedot\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menuHandlebutton marginL200 \",\n        onClick: () => setMoreInfo({\n          visibility: !moreInfo.visibility,\n          ingredients: props.ingredients,\n          energyContent: props.energy\n        }),\n        children: \"More information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this);\n    };\n\n    return menuCategories.map(category => {\n      return menuCategory.includes(category) ?\n      /*#__PURE__*/\n      // Tarkastetaan onko ko kategoriassa tuotteita, jos ei niin kategoriaa ei tulosteta\n      _jsxDEV(\"div\", {\n        className: \"menuCategoryContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: category.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), menu.map((item, index) => {\n          return item.type.toLowerCase().includes(category) ?\n          /*#__PURE__*/\n          // Tässä käydään tuotteet läpi ja tulostetaan ne kategoriottain\n          _jsxDEV(\"div\", {\n            className: \"menuItemContainer flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"restaurantImg\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                alt: item.productName,\n                width: \"100%\",\n                src: item.productImg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"productInfo\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"productMainInfo flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: item.productName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 30\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: item.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 30\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(AddToShopingcart, {\n                  productInfo: item\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"productAdditionalInfo flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: [item.price, \" \\u20AC\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 30\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(AllergyInfo, {\n                  productInfo: item.allergens\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(ProductInfoButton, {\n                  ingredients: item.ingredients,\n                  energy: item.energyContent\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 19\n          }, this) : null;\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this) : null;\n    });\n  };\n\n  const [allergyInfoVisibility, setAllergyInfoVisibility] = useState(false); // Allergiainfo pop-up hallinta\n\n  function allergensInfo() {\n    // Allergialyheteiden selosteet. Näytetään kun painetaan infopainiketta\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"allergyInfoPopUp\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Allergens:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: `\n          CE = Cellery\n          CR = Crustaceans\n          E  = Eggs\n          F  = Fish\n          G  = Gluten\n          L  = Lupin\n          MI = Milk\n          MO = Molluscs\n          MU = Mustard\n          P  = Peanuts\n          SE = Sesame seeds\n          SO = Soybeans\n          SU = Sulfur dioxide and sulphites\n          t  = Tree nuts\n        `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"\",\n          onClick: () => setAllergyInfoVisibility(false),\n          children: \" OK \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this);\n  }\n\n  const [moreInfo, setMoreInfo] = useState({\n    visibility: false,\n    ingredients: \"\",\n    energyContent: \"\"\n  }); // Lisäinfo pop-up hallinta. Tähän tallennetaan näkyvyys ja lisätiedot\n\n  function printMoreInfo() {\n    // Lisäinfonjon tulostus. Tiedot haetaan statehookista\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"allergyInfoPopUp\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Ingredients: \", moreInfo.ingredients]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Energy: \", moreInfo.energyContent, \" kCal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"\",\n          onClick: () => setMoreInfo({\n            visibility: false,\n            ingredients: \"\",\n            energyContent: \"\"\n          }),\n          children: \" OK \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      addContentToHeader: manageHeaderContent,\n      shoppingCartItems: shoppingCartItems,\n      passShoppingCartToApp: passShoppingCartToApp,\n      logIn: props.loggedIn,\n      logOut: props.logOut,\n      onHeaderButtonClick: headerButtonHandler,\n      onSearchButtonClick: searchHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"marginT120\",\n      children: [/*#__PURE__*/_jsxDEV(MenuItemHandler, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), allergyInfoVisibility ? allergensInfo() : null, moreInfo.visibility ? printMoreInfo() : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MenuBrowser, \"cSSjO3VS0mmLmMuUtaU5SiPw0v0=\");\n\n_c = MenuBrowser;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuBrowser\");","map":{"version":3,"sources":["C:/Users/Kasperi/Web-ohjelmoinnin_sovellusprojekti/clientApp/src/components/MenuBrowser.js"],"names":["React","useEffect","useState","Header","axios","FontAwesomeIcon","faXmark","faBasketShopping","faInfo","MenuBrowser","props","selectedCity","city","selectedRestaurant","restaurant","name","menuCategories","categoryQty","setCategoryQty","menu","setMenu","menuCategory","setMenuCategory","searchHandler","searchBarText","getData","then","res","searchEngine","items","searchArgument","search","toString","toLowerCase","trim","searchResult","filter","item","Object","keys","some","key","includes","shoppingCartItems","setShoppingCartItems","shoppingCartTesting","newShoppingCartItems","itemClickedIndex","findIndex","i","productId","newElement","qty","id","length","productName","price","console","log","passShoppingCartToApp","addItemsToCart","headerButtonHandler","buttonValue","headerButtons","listCategories","shoppingCart","data","menuCategoryList","categoryList","Set","map","add","type","x","values","push","manageHeaderContent","manageFilterButtons","color","index","removeSelection","alert","unSelectCity","unSelectRestaurant","MenuItemHandler","AddToShopingcart","productInfo","AllergyInfo","printAllergyIcon","allergy","setAllergyInfoVisibility","allergyInfoVisibility","ProductInfoButton","setMoreInfo","visibility","moreInfo","ingredients","energyContent","energy","category","toUpperCase","productImg","description","allergens","allergensInfo","printMoreInfo","loggedIn","logOut"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport './Shop.css';\r\nimport { useEffect, useState } from 'react';\r\nimport Header from './Header';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faXmark, faBasketShopping, faInfo } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nexport default function MenuBrowser(props) {\r\n\r\n  let selectedCity = props.city;\r\n  let selectedRestaurant = props.restaurant.name;\r\n  let menuCategories = ['appetizer', 'main dish', 'dessert', 'drink', 'extras', 'other'];   // tuotekategoriat, jonka mukaan asettelu on rakennettu. Tuotteet tulostetaan kategoriossa taulukon järjestyksessä\r\n  const [ categoryQty, setCategoryQty ] = useState(1);      // En varmaan vaan osaa, mut joutu tekemään tän Vakioannostyypien määrälle. categoryQty > 1 on tuotekategorioiden filtteröinti käytössä\r\n  const [ menu, setMenu ] = useState([]);                   // Tähän asetetaan näytölle tulostettavat annokset\r\n  const [ menuCategory, setMenuCategory ] = useState([]);   // Ja tähän tuotekategoriat. Tätä käytetään myös tuotekategorioiden filtteröintiin  \r\n\r\n  // Hakutoiminnon eventhandler-funktio. Funktiolla tällä hetkellä päivitetään hardkoodatuista ravintoloista suoritettu haku headerin hakukenttään annetun teksin perusteella\r\n  const searchHandler = (searchBarText) => {\r\n    getData().then( function(res){ setMenu( searchEngine(res,searchBarText) ) });\r\n  }\r\n  // Hakufunktio, jolla haetaan siihen syötetyn tietueen oliot, joiden arvoista löytyy annettu hakusana\r\n  const searchEngine = (items, searchArgument) => {\r\n    var search = searchArgument.toString().toLowerCase().trim();\r\n    var searchResult = items.filter(item => {\r\n      return Object.keys(item).some(key => item[key].toString().toLowerCase().includes(search));\r\n    });\r\n    return searchResult;\r\n  }\r\n\r\n  // Tuotteiden valinnan toimintojen hahmottelua\r\n  const [ shoppingCartItems, setShoppingCartItems ] = useState([]);\r\n  // Funktio, jolla lisätään tuote ostoskoriin tai jos tuote on jo korissa lisätään sen määrää\r\n  const shoppingCartTesting = (item) => { \r\n  let newShoppingCartItems = [...shoppingCartItems];\r\n  let itemClickedIndex = newShoppingCartItems.findIndex(i => item.productId === i.productId)\r\n  if (itemClickedIndex !== -1) {\r\n    let newElement = {...newShoppingCartItems[itemClickedIndex]}\r\n    newElement.qty += 1;\r\n    newShoppingCartItems[itemClickedIndex] = newElement;\r\n  }\r\n  else {\r\n    let newElement = [...newShoppingCartItems,\r\n    {\r\n      id : shoppingCartItems.length + 1,\r\n      productId : item.productId,\r\n      name : item.productName,\r\n      price : item.price,\r\n      qty : 1\r\n    }]\r\n    newShoppingCartItems = newElement;\r\n  }\r\n  setShoppingCartItems(newShoppingCartItems);\r\n  console.log(item.productName + \" added to cart\");\r\n  console.log(newShoppingCartItems);\r\n}\r\n  // Ehkä tyhmä idea, mutta jotta saa näkymän toiminnot toimimaan oikeen käytetään funktion omaa statehookkia ja päivitetään ostoskori vain hallitusti App.js:ään\r\n  function passShoppingCartToApp() {\r\n    props.addItemsToCart(shoppingCartItems)\r\n  }\r\n  // Liittyy edelliseen funktioon. Näkymän vaihdon yhteydessä päivitetään ostoskorin sisältö App.js\r\n  const headerButtonHandler = (buttonValue) => {\r\n    passShoppingCartToApp();\r\n    props.headerButtons(buttonValue);\r\n  }\r\n\r\n  // Näkymän ensimäisen renderöinnin yhteydessä haetaan valitun ravintolan ruokalista, tuotekategoriat, ostoskorin sisältö App.js:stä ja tallennetaan ne useState-hookkeihin\r\n  useEffect(() => {\r\n    getData().then(setMenu);\r\n    getData().then(listCategories).then(setMenuCategory);\r\n    setShoppingCartItems(props.shoppingCart)\r\n    getData().then(listCategories).then((res) => {\r\n      setCategoryQty(res.length);\r\n    });\r\n  }, [] );\r\n\r\n  // Funktiolla tullaan hakemaan tietokannasta valitun ravintolan menu / tiedot. Testivaiheessa vähän oiotaan mutkia\r\n  async function getData() {\r\n    //const results = await axios.get('http://rajapinnanOsoite/'+props.restaurant.restaurantId);\r\n    return props.restaurant.menu;\r\n  }\r\n\r\n  // Listataan menun tuotekategoriat\r\n  function listCategories(data) {\r\n    let menuCategoryList =[];\r\n    let categoryList = new Set()\r\n    data.map((item) => {\r\n      return categoryList.add(item.type)\r\n    });\r\n    for (const x of categoryList.values()) {\r\n      if (menuCategories.includes(x.toLowerCase())) {\r\n        menuCategoryList.push(x.toLowerCase());\r\n      }\r\n      else if (menuCategoryList.includes(!'Other')) {\r\n        menuCategoryList.push('Other');\r\n      }\r\n    }\r\n    return menuCategoryList;\r\n  }\r\n\r\n  // Funktiolla lisätään headeriin valintojen postonapit sekä napit menufilttereille\r\n  const manageHeaderContent = (props) => {\r\n    // Luodaan napit filtteröintiin ja sen poistoon\r\n    function manageFilterButtons(){\r\n      if (menuCategory.length === 1 &&  categoryQty > 1) {    \r\n        return (\r\n          <button className=\"styleButton\" type=\"button\" onClick={ ()=> getData().then(listCategories).then(setMenuCategory) }>\r\n            <span>{ menuCategory[0] } <FontAwesomeIcon style={{ color: 'crimson' }} icon={ faXmark }/></span>\r\n          </button>\r\n        )\r\n      }\r\n      else if (menuCategory.length > 1 ||  categoryQty > 1) {\r\n        return menuCategories.map((item, index) => {\r\n          return menuCategory.includes(item) ? \r\n            <button className=\"styleButton\" type=\"button\" key={ index } onClick={ ()=> setMenuCategory( [item] ) }>\r\n              <span>{ item }</span>\r\n            </button> \r\n            :\r\n            null;\r\n        });\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"flex\">\r\n        <button className=\"styleButton\" type=\"button\" onClick={ ()=> removeSelection(\"city\") }>\r\n          <span>{ selectedCity } <FontAwesomeIcon style={{ color: 'crimson' }} icon={ faXmark }/></span>\r\n        </button>\r\n        <button className=\"cityButton\" type=\"button\" onClick={ ()=> removeSelection(\"restaurant\") }>\r\n          <span>{ selectedRestaurant } <FontAwesomeIcon style={{ color: 'crimson' }} icon={ faXmark }/></span>\r\n        </button>\r\n        <div className=\"restaurantStyleButtons flex\">\r\n          { manageFilterButtons() }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // Viritelmä valintojen poistoa varten\r\n  const removeSelection = (item) => {\r\n    if (shoppingCartItems.length > 0) {   // Jos ostoskoriin on lisätty tavaraa, se tyhjennettään jos peruutetaan ravintola-/kaupinkivalinta\r\n      alert(\"Ostoskori on tyhjennetty\");\r\n      props.addItemsToCart([])\r\n    }\r\n    switch (item) {\r\n      case 'city' :  \r\n        props.unSelectCity(\"\");\r\n        return\r\n      case 'restaurant':\r\n        props.unSelectRestaurant(\"\");\r\n        return\r\n      default : \r\n        return console.log(\"react ei ehkä ookkaan niin mukavaa\");\r\n    }\r\n  }\r\n\r\n  // Täällä tapahtuu itse ruokalistan käsittely ja \"tulostaminen\"\r\n  const MenuItemHandler = () => {    \r\n\r\n    const AddToShopingcart = (props) => { // Tässä luodaan lisää ostoskoriin nappi\r\n      return (\r\n        <div className=\"menuHandlebutton\" onClick={ ()=> shoppingCartTesting(props.productInfo) }>\r\n          <h3> Add to Cart <FontAwesomeIcon icon={ faBasketShopping }/> </h3>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    const AllergyInfo = (props) => {  // Tässä allergiainfo.  Tulostetaan lihenteet tuotteen allergioista ja nappi jolla tulostetaan lyhenbteiden selitykset\r\n      function printAllergyIcon(allergy) {\r\n        switch (allergy) {\r\n          case 1 :  \r\n            return <div className=\"allergyIcon\"> CE </div>\r\n          case 2 :  \r\n            return <div className=\"allergyIcon\"> CR </div>\r\n          case 3 :  \r\n            return <div className=\"allergyIcon\"> E </div>\r\n          case 4 :  \r\n            return <div className=\"allergyIcon\"> F </div>\r\n          case 5 :  \r\n            return <div className=\"allergyIcon\"> G </div>\r\n          case 6 :  \r\n            return <div className=\"allergyIcon\"> L </div>\r\n          case 7 :  \r\n            return <div className=\"allergyIcon\"> MI </div>\r\n          case 8 :  \r\n            return <div className=\"allergyIcon\"> MO </div>\r\n          case 9 :  \r\n            return <div className=\"allergyIcon\"> MU </div>\r\n          case 10 :  \r\n            return <div className=\"allergyIcon\"> P </div>\r\n          case 11 :  \r\n            return <div className=\"allergyIcon\"> SE </div>\r\n          case 12 :  \r\n            return <div className=\"allergyIcon\"> SO </div>\r\n          case 13 :  \r\n            return <div className=\"allergyIcon\"> SU </div>\r\n          case 14 :  \r\n            return <div className=\"allergyIcon\"> T </div>\r\n          default : \r\n            return null\r\n        }\r\n      }\r\n      return (\r\n        <div className=\"marginL200 flex\">\r\n          <div>Allergy information: </div>\r\n          { props.productInfo.map((item) => { return printAllergyIcon(item) }) }\r\n          <div className=\"allergyInfoIcon\" onClick={ ()=> setAllergyInfoVisibility(!allergyInfoVisibility) }> <FontAwesomeIcon icon={ faInfo } size=\"1x\"/></div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    const ProductInfoButton = (props) => {  // Tulostetaan lisäinfonappi. Nappia painamalla asetetaa lisäinfo näkyväksi ja asetetaan statehookkiin tuotteen lisätiedot\r\n      return (\r\n        <div className=\"menuHandlebutton marginL200 \" onClick={ ()=> setMoreInfo({visibility: !moreInfo.visibility, ingredients: props.ingredients, energyContent: props.energy}) }>\r\n          More information\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      menuCategories.map((category) => {\r\n        return menuCategory.includes(category) ? // Tarkastetaan onko ko kategoriassa tuotteita, jos ei niin kategoriaa ei tulosteta\r\n          <div className=\"menuCategoryContainer\">\r\n            <div className=\"title\"><h2>{ category.toUpperCase() }</h2></div>\r\n            { \r\n              menu.map((item, index) => {\r\n                return item.type.toLowerCase().includes(category) ?   // Tässä käydään tuotteet läpi ja tulostetaan ne kategoriottain\r\n                  <div className=\"menuItemContainer flex\" key={index} > \r\n                    <div className=\"restaurantImg\">\r\n                      <img alt={ item.productName } width=\"100%\" src={ item.productImg }/>\r\n                    </div>\r\n                    <div className=\"productInfo\">\r\n                      <div className=\"productMainInfo flex\">\r\n                        <div><h2>{ item.productName }</h2></div>\r\n                        <div><p>{ item.description }</p></div>\r\n                        <AddToShopingcart productInfo={ item }/>\r\n                      </div>\r\n                      <div className=\"productAdditionalInfo flex\">\r\n                        <div><h3>{ item.price  } €</h3></div>\r\n                        <AllergyInfo productInfo={ item.allergens }/>\r\n                        <ProductInfoButton ingredients={ item.ingredients } energy={ item.energyContent }/>\r\n                      </div>\r\n                    </div>\r\n                  </div> \r\n                  : null\r\n              })\r\n            }\r\n          </div> \r\n          : null\r\n      })\r\n      \r\n    )    \r\n  }\r\n\r\n  const [ allergyInfoVisibility, setAllergyInfoVisibility ] = useState(false); // Allergiainfo pop-up hallinta\r\n  function allergensInfo() {  // Allergialyheteiden selosteet. Näytetään kun painetaan infopainiketta\r\n    return (\r\n      <div className=\"allergyInfoPopUp\">\r\n        <h4>Allergens:</h4>\r\n        <pre>{`\r\n          CE = Cellery\r\n          CR = Crustaceans\r\n          E  = Eggs\r\n          F  = Fish\r\n          G  = Gluten\r\n          L  = Lupin\r\n          MI = Milk\r\n          MO = Molluscs\r\n          MU = Mustard\r\n          P  = Peanuts\r\n          SE = Sesame seeds\r\n          SO = Soybeans\r\n          SU = Sulfur dioxide and sulphites\r\n          t  = Tree nuts\r\n        `}</pre>\r\n        <div>\r\n          <button className=\"\" onClick={ ()=> setAllergyInfoVisibility(false) }> OK </button>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n\r\n  const [ moreInfo, setMoreInfo ] = useState({visibility: false, ingredients: \"\", energyContent: \"\"}); // Lisäinfo pop-up hallinta. Tähän tallennetaan näkyvyys ja lisätiedot\r\n  function printMoreInfo() {  // Lisäinfonjon tulostus. Tiedot haetaan statehookista\r\n    return (\r\n      <div className=\"allergyInfoPopUp\">\r\n        <h4>Ingredients: { moreInfo.ingredients }</h4>\r\n        <h4>Energy: { moreInfo.energyContent } kCal</h4>\r\n        <div>\r\n          <button className=\"\" onClick={ ()=> setMoreInfo({visibility: false, ingredients: \"\", energyContent: \"\"}) }> OK </button>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header \r\n        addContentToHeader={ manageHeaderContent } shoppingCartItems={ shoppingCartItems } passShoppingCartToApp={ passShoppingCartToApp }\r\n        logIn={ props.loggedIn } logOut={ props.logOut } onHeaderButtonClick={ headerButtonHandler } onSearchButtonClick={ searchHandler }\r\n      />\r\n      <div className=\"marginT120\">\r\n        <MenuItemHandler/>\r\n        { allergyInfoVisibility ? allergensInfo() : null }\r\n        { moreInfo.visibility ? printMoreInfo() : null }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}