{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kasperi\\\\Web-ohjelmoinnin_sovellusprojekti\\\\clientApp\\\\src\\\\App.js\",\n    _s2 = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport CitySelection from './components/CitySelection';\nimport RestaurantBrowser from './components/RestaurantBrowser';\nimport MenuBrowser from './components/MenuBrowser';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleInfo, faInfo } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  // Jotain toiminnallisuutta kaupungin valinnan hallintaan\n  const [selectedCity, setSelectedCity] = useState(\"\"); // valittu kaupunki\n\n  const citySelectHandler = selection => {\n    if (selection === \"\") {\n      // poistetaan kaupungin valinta. Samalla myös poistetaan ravintolan valinta\n      setSelectedCity(selection);\n      setSelectedRestaurant(selection);\n      setScene(\"CitySelection\"); // asetetaan näkymäksi kaupungin valinta\n    } else {\n      setSelectedCity(selection); // Asetetaan statehookkiin valittu kaupunki ja siirryttän ravintolavalintanäkymään\n\n      setScene(\"RestaurantBrowser\");\n    }\n  }; // Toiminnallisuuksia ravintolan valintaan\n\n\n  const [selectedRestaurant, setSelectedRestaurant] = useState(\"\"); // Ravintolan valintatieto\n\n  const restaurantSelectHandler = selection => {\n    if (selection === \"\") {\n      setSelectedRestaurant(selection);\n      setScene(\"RestaurantBrowser\");\n    } else {\n      setSelectedRestaurant(selection);\n      setScene(\"MenuBrowser\");\n    }\n  };\n\n  const [logIn, setLogIn] = useState(\"\"); // Kirjautumistiedot. Testivaiheessa oon tallentanut vaan nimen. Toteutuksessa nimi + rooli??\n\n  const [shoppingCartItems, setShoppingCartItems] = useState([]); // Ostoskorin sisältö tallennetaan tähän. Ainakin testien ajaksi\n  // Jotain räpellystä näkymän hallintaa liittyen\n\n  const [scene, setScene] = useState(\"CitySelection\"); // Statehook, jolla asetellaan näkymä\n\n  const ViewhHandler = () => {\n    // switchcase rakenne, josta haetaan asetetun näkymän react-komponentti\n    switch (scene) {\n      case 'CitySelection':\n        return /*#__PURE__*/_jsxDEV(CitySelection, {\n          onSelectClick: citySelectHandler,\n          loggedIn: logIn,\n          logOut: setLogIn,\n          headerButtons: setScene,\n          shoppingCart: shoppingCartItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 16\n        }, this);\n\n      case 'RestaurantBrowser':\n        return /*#__PURE__*/_jsxDEV(RestaurantBrowser, {\n          onSelectClick: restaurantSelectHandler,\n          loggedIn: logIn,\n          logOut: setLogIn,\n          headerButtons: setScene,\n          city: selectedCity,\n          unSelectCity: citySelectHandler,\n          shoppingCart: shoppingCartItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 16\n        }, this);\n\n      case 'MenuBrowser':\n        return /*#__PURE__*/_jsxDEV(MenuBrowser, {\n          city: selectedCity,\n          unSelectCity: citySelectHandler,\n          loggedIn: logIn,\n          logOut: setLogIn,\n          headerButtons: setScene,\n          restaurant: selectedRestaurant,\n          unSelectRestaurant: restaurantSelectHandler,\n          shoppingCart: shoppingCartItems,\n          addItemsToCart: setShoppingCartItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 16\n        }, this);\n\n      case 'LogIn':\n        // Tämän hetkinen tuloste vain toiminnan testailua varten. Oikea tulossa\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Coming Soon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => [setLogIn(\"Seppo Taalasmaa\"), setScene(prevScene)],\n            children: \"Mutta sill\\xE4 v\\xE4lin kirjaudu Seppona sis\\xE4\\xE4n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this);\n\n      case 'ShopingCart':\n        // Tämän hetkinen tuloste vain toiminnan testailua varten. Oikea tulossa\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Coming Soon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"Ostoskorin sis\\xE4lt\\xF6:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this), shoppingCartItems.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [item.name, \" \", item.qty]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 22\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setScene(prevScene),\n            children: \"Takaisin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this);\n\n      default:\n        // Tuloste virheelisesta näkymävalinnasta\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"React ompi mukavaa!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Virhe! N\\xE4kym\\xE4\\xE4 \\\"\", scene, \"\\\" ei l\\xF6ydy\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setScene(prevScene),\n            children: \"Takaisin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this);\n    }\n  }; // Funktio, jolla palautetaan statehookin edellinen arvo\n\n\n  function usePrevious(value) {\n    _s();\n\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current ? ref.current.toString() : null;\n  }\n\n  _s(usePrevious, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n  let prevScene = usePrevious(scene); // Tähän tallennetaan edellinen näkymä. Hyödynnetään palatessa näkymästä edelliseen\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ViewhHandler, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"uDZSMQgAKkYiS0ocxASWsuypmX8=\", false, function () {\n  return [usePrevious];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Kasperi/Web-ohjelmoinnin_sovellusprojekti/clientApp/src/App.js"],"names":["useEffect","useState","useRef","axios","CitySelection","RestaurantBrowser","MenuBrowser","FontAwesomeIcon","faCircleInfo","faInfo","App","selectedCity","setSelectedCity","citySelectHandler","selection","setSelectedRestaurant","setScene","selectedRestaurant","restaurantSelectHandler","logIn","setLogIn","shoppingCartItems","setShoppingCartItems","scene","ViewhHandler","prevScene","map","item","name","qty","usePrevious","value","ref","current","toString"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport CitySelection from './components/CitySelection';\r\nimport RestaurantBrowser from './components/RestaurantBrowser';\r\nimport MenuBrowser from './components/MenuBrowser';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCircleInfo, faInfo } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nfunction App() {\r\n\r\n  // Jotain toiminnallisuutta kaupungin valinnan hallintaan\r\n  const [ selectedCity, setSelectedCity ] = useState(\"\"); // valittu kaupunki\r\n  const citySelectHandler = (selection) => {\r\n    if (selection === \"\") {     // poistetaan kaupungin valinta. Samalla myös poistetaan ravintolan valinta\r\n      setSelectedCity(selection);\r\n      setSelectedRestaurant(selection);\r\n      setScene(\"CitySelection\");  // asetetaan näkymäksi kaupungin valinta\r\n    }\r\n    else {\r\n      setSelectedCity(selection); // Asetetaan statehookkiin valittu kaupunki ja siirryttän ravintolavalintanäkymään\r\n      setScene(\"RestaurantBrowser\");\r\n    }\r\n  }\r\n\r\n  // Toiminnallisuuksia ravintolan valintaan\r\n  const [ selectedRestaurant, setSelectedRestaurant ] = useState(\"\"); // Ravintolan valintatieto\r\n  const restaurantSelectHandler = (selection) => {\r\n    if (selection === \"\") {\r\n      setSelectedRestaurant(selection);\r\n      setScene(\"RestaurantBrowser\");\r\n    }\r\n    else {\r\n      setSelectedRestaurant(selection);\r\n      setScene(\"MenuBrowser\");\r\n    }\r\n  }\r\n\r\n  const [ logIn, setLogIn ] = useState(\"\");   // Kirjautumistiedot. Testivaiheessa oon tallentanut vaan nimen. Toteutuksessa nimi + rooli??\r\n  const [ shoppingCartItems, setShoppingCartItems ] = useState([]);    // Ostoskorin sisältö tallennetaan tähän. Ainakin testien ajaksi\r\n\r\n\r\n  // Jotain räpellystä näkymän hallintaa liittyen\r\n  const [ scene, setScene ] = useState(\"CitySelection\");  // Statehook, jolla asetellaan näkymä\r\n  const ViewhHandler = () => {    // switchcase rakenne, josta haetaan asetetun näkymän react-komponentti\r\n    switch (scene) {\r\n      case 'CitySelection' :    \r\n        return <CitySelection onSelectClick={ citySelectHandler } loggedIn={ logIn } logOut={ setLogIn } headerButtons={ setScene }\r\n                              shoppingCart={ shoppingCartItems }/>;\r\n      case 'RestaurantBrowser': \r\n        return <RestaurantBrowser onSelectClick={ restaurantSelectHandler } loggedIn={ logIn } logOut={ setLogIn } headerButtons={ setScene }\r\n                                  city={ selectedCity } unSelectCity={ citySelectHandler } shoppingCart={ shoppingCartItems }/>;\r\n                                  \r\n      case 'MenuBrowser' :\r\n        return <MenuBrowser city={ selectedCity } unSelectCity={ citySelectHandler } loggedIn={ logIn } logOut={ setLogIn } headerButtons={ setScene }\r\n                            restaurant={ selectedRestaurant } unSelectRestaurant={ restaurantSelectHandler } shoppingCart={ shoppingCartItems } addItemsToCart={ setShoppingCartItems }/>;\r\n      case 'LogIn': // Tämän hetkinen tuloste vain toiminnan testailua varten. Oikea tulossa\r\n        return (\r\n          <div>\r\n            <h2>Coming Soon</h2>\r\n            <button onClick={ ()=> [setLogIn(\"Seppo Taalasmaa\"), setScene(prevScene)] }>Mutta sillä välin kirjaudu Seppona sisään</button>\r\n          </div>\r\n        )\r\n      case 'ShopingCart': // Tämän hetkinen tuloste vain toiminnan testailua varten. Oikea tulossa\r\n      return (\r\n        <div>\r\n          <h2>Coming Soon</h2>\r\n          <a>Ostoskorin sisältö:</a>\r\n          {\r\n            shoppingCartItems.map((item) => {\r\n              return <div>{item.name } { item.qty }</div>\r\n            })\r\n          }  \r\n          <button onClick={ ()=> setScene(prevScene) }>Takaisin</button>\r\n        </div>\r\n      )\r\n      default :  // Tuloste virheelisesta näkymävalinnasta\r\n        return(\r\n          <div>\r\n            <h2>React ompi mukavaa!</h2>\r\n            <h2>Virhe! Näkymää \"{ scene }\" ei löydy</h2>\r\n            <button onClick={ ()=> setScene(prevScene) }>Takaisin</button>\r\n          </div>\r\n        )\r\n    }\r\n  }\r\n\r\n  // Funktio, jolla palautetaan statehookin edellinen arvo\r\n  function usePrevious(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n      ref.current = value;\r\n    });\r\n    return ref.current ? ref.current.toString() : null;\r\n  }\r\n  let prevScene = usePrevious(scene);   // Tähän tallennetaan edellinen näkymä. Hyödynnetään palatessa näkymästä edelliseen\r\n\r\n\r\n  return (\r\n    <div>\r\n      <ViewhHandler/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}