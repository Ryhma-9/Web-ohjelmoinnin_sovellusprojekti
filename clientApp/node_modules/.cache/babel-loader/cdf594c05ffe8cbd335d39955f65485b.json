{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kasperi\\\\Web-ohjelmoinnin_sovellusprojekti\\\\clientApp\\\\src\\\\components\\\\CitySelection.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Shop.css';\nimport { useEffect, useState } from 'react';\nimport Header from './Header';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CitySelection(props) {\n  _s();\n\n  const citys = [// Hardkoodattu muutama kaupunki kehistysvaiheen toiminnan testailuja varten\n  {\n    city: \"Oulu\"\n  }, {\n    city: \"Tampesteri\"\n  }, {\n    city: \"Hulsinki\"\n  }, {\n    city: \"Hoopovesi\"\n  }, {\n    city: \"Utsjoki\"\n  }, {\n    city: \"Turku\"\n  }, {\n    city: \"Kempele\"\n  }, {\n    city: \"Lumijoki\"\n  }, {\n    city: \"Kemi\"\n  }, {\n    city: \"Vantaa\"\n  }, {\n    city: \"Espoo\"\n  }, {\n    city: \"Mikkeli\"\n  }, {\n    city: \"Jyväskylä\"\n  }, {\n    city: \"Kärsämäki\"\n  }];\n  const [cityList, setCityList] = useState([]); // Tässä hallitaan näytettävät kaupungit\n  // Näkymän ensimäisen renderöinnin yhteydessä haetaan kaikki kaupungit, joissa on ravintoloita ja tallennetaan ne useState-hookkiin\n\n  useEffect(() => {\n    getData().then(setCityList);\n  }, []); // Funktiolla tullaan hakemaan tietokannasta kaupungit. Testivaiheessa palauttaa hardkkoodatut tiedot\n\n  async function getData() {\n    //const results = await axios.get('http://rajapinnanOsoite/');\n    return citys;\n  } // Hakutoiminnon eventhandler-funktio\n\n\n  const searchHandler = searchBarText => {\n    getData().then(function (res) {\n      setCityList(searchEngine(res, searchBarText));\n    });\n  }; // Hakufunktio, jolla haetaan siihen syötetyn tietueen oliot, joiden arvoista löytyy annettu hakusana\n\n\n  const searchEngine = (citys, searchArgument) => {\n    var search = searchArgument.toString().toLowerCase().trim();\n    var searchResult = citys.filter(item => {\n      return Object.keys(item).some(key => item[key].toString().toLowerCase().includes(search));\n    });\n    return searchResult;\n  }; // Funktio, jolla voi luoda random rgb-värin. Kunhan huviksi värkkäilin ja lisäsin muotoilun, joka arpoo jokaiselle kaupunkiboksille eri värin\n\n\n  function randomColor() {\n    let r = Math.round(Math.random() * 255);\n    let g = Math.round(Math.random() * 255);\n    let b = Math.round(Math.random() * 255);\n    return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onSearchButtonClick: searchHandler,\n      logIn: props.loggedIn,\n      logOut: props.logOut,\n      onHeaderButtonClick: props.headerButtons,\n      shoppingCartItems: props.shoppingCart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"marginT120 flex cityBoxContainer\",\n      children: cityList.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"citySelectionBox\",\n          style: {\n            backgroundColor: randomColor()\n          },\n          onClick: () => props.onSelectClick(item.city),\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"marginT40p\",\n            children: item.city\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CitySelection, \"wQ7lQP3fwE/A/yW5tWy33vxWdIQ=\");\n\n_c = CitySelection;\n\nvar _c;\n\n$RefreshReg$(_c, \"CitySelection\");","map":{"version":3,"sources":["C:/Users/Kasperi/Web-ohjelmoinnin_sovellusprojekti/clientApp/src/components/CitySelection.js"],"names":["React","useEffect","useState","Header","axios","CitySelection","props","citys","city","cityList","setCityList","getData","then","searchHandler","searchBarText","res","searchEngine","searchArgument","search","toString","toLowerCase","trim","searchResult","filter","item","Object","keys","some","key","includes","randomColor","r","Math","round","random","g","b","loggedIn","logOut","headerButtons","shoppingCart","map","index","backgroundColor","onSelectClick"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAE3C,QAAMC,KAAK,GAAG,CAAU;AACtB;AACEC,IAAAA,IAAI,EAAG;AADT,GADY,EAIZ;AACEA,IAAAA,IAAI,EAAG;AADT,GAJY,EAOZ;AACEA,IAAAA,IAAI,EAAG;AADT,GAPY,EAUZ;AACEA,IAAAA,IAAI,EAAG;AADT,GAVY,EAaZ;AACEA,IAAAA,IAAI,EAAG;AADT,GAbY,EAgBZ;AACEA,IAAAA,IAAI,EAAG;AADT,GAhBY,EAmBZ;AACEA,IAAAA,IAAI,EAAG;AADT,GAnBY,EAsBZ;AACEA,IAAAA,IAAI,EAAG;AADT,GAtBY,EAyBZ;AACEA,IAAAA,IAAI,EAAG;AADT,GAzBY,EA4BZ;AACEA,IAAAA,IAAI,EAAG;AADT,GA5BY,EA+BZ;AACEA,IAAAA,IAAI,EAAG;AADT,GA/BY,EAkCZ;AACEA,IAAAA,IAAI,EAAG;AADT,GAlCY,EAqCZ;AACEA,IAAAA,IAAI,EAAG;AADT,GArCY,EAwCZ;AACEA,IAAAA,IAAI,EAAG;AADT,GAxCY,CAAd;AA6CA,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C,CA/C2C,CA+CO;AAElD;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO,GAAGC,IAAV,CAAeF,WAAf;AACD,GAFQ,EAEN,EAFM,CAAT,CAlD2C,CAsD3C;;AACA,iBAAeC,OAAf,GAAyB;AACvB;AACA,WAAOJ,KAAP;AACD,GA1D0C,CA4D3C;;;AACA,QAAMM,aAAa,GAAIC,aAAD,IAAmB;AACvCH,IAAAA,OAAO,GAAGC,IAAV,CAAgB,UAASG,GAAT,EAAa;AAAEL,MAAAA,WAAW,CAAEM,YAAY,CAACD,GAAD,EAAKD,aAAL,CAAd,CAAX;AAAgD,KAA/E;AACD,GAFD,CA7D2C,CAiE3C;;;AACA,QAAME,YAAY,GAAG,CAACT,KAAD,EAAQU,cAAR,KAA2B;AAC9C,QAAIC,MAAM,GAAGD,cAAc,CAACE,QAAf,GAA0BC,WAA1B,GAAwCC,IAAxC,EAAb;AACA,QAAIC,YAAY,GAAGf,KAAK,CAACgB,MAAN,CAAaC,IAAI,IAAI;AACtC,aAAOC,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkBG,IAAlB,CAAuBC,GAAG,IAAIJ,IAAI,CAACI,GAAD,CAAJ,CAAUT,QAAV,GAAqBC,WAArB,GAAmCS,QAAnC,CAA4CX,MAA5C,CAA9B,CAAP;AACD,KAFkB,CAAnB;AAGA,WAAOI,YAAP;AACD,GAND,CAlE2C,CA0E3C;;;AACA,WAASQ,WAAT,GAAuB;AACrB,QAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,GAA5B,CAAR;AACA,QAAIC,CAAC,GAAGH,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,GAA5B,CAAR;AACA,QAAIE,CAAC,GAAGJ,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,GAA5B,CAAR;AACA,WAAO,SAASH,CAAT,GAAa,IAAb,GAAoBI,CAApB,GAAwB,IAAxB,GAA+BC,CAA/B,GAAmC,GAA1C;AACD;;AAGD,sBACE;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,mBAAmB,EAAGvB,aADxB;AACwC,MAAA,KAAK,EAAGP,KAAK,CAAC+B,QADtD;AACiE,MAAA,MAAM,EAAG/B,KAAK,CAACgC,MADhF;AAEE,MAAA,mBAAmB,EAAGhC,KAAK,CAACiC,aAF9B;AAE8C,MAAA,iBAAiB,EAAGjC,KAAK,CAACkC;AAFxE;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAA,gBAEI/B,QAAQ,CAACgC,GAAT,CAAa,CAACjB,IAAD,EAAOkB,KAAP,KAAiB;AAC5B,4BACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAkC,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAEb,WAAW;AAA9B,WAAzC;AAAyF,UAAA,OAAO,EAAG,MAAKxB,KAAK,CAACsC,aAAN,CAAoBpB,IAAI,CAAChB,IAAzB,CAAxG;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,YAAd;AAAA,sBAA6BgB,IAAI,CAAChB;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF,WAAkFkC,KAAlF;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OAND;AAFJ;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAtGuBrC,a;;KAAAA,a","sourcesContent":["import React from 'react'\r\nimport './Shop.css';\r\nimport { useEffect, useState } from 'react';\r\nimport Header from './Header';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function CitySelection(props) {\r\n\r\n  const citys = [         // Hardkoodattu muutama kaupunki kehistysvaiheen toiminnan testailuja varten\r\n    { \r\n      city : \"Oulu\"\r\n    },\r\n    { \r\n      city : \"Tampesteri\"\r\n    },\r\n    { \r\n      city : \"Hulsinki\"\r\n    },\r\n    { \r\n      city : \"Hoopovesi\"\r\n    },\r\n    { \r\n      city : \"Utsjoki\"\r\n    },\r\n    { \r\n      city : \"Turku\"\r\n    },\r\n    { \r\n      city : \"Kempele\"\r\n    },\r\n    { \r\n      city : \"Lumijoki\"\r\n    },\r\n    { \r\n      city : \"Kemi\"\r\n    },\r\n    { \r\n      city : \"Vantaa\"\r\n    },\r\n    { \r\n      city : \"Espoo\"\r\n    },\r\n    { \r\n      city : \"Mikkeli\"\r\n    },\r\n    { \r\n      city : \"Jyväskylä\"\r\n    },\r\n    { \r\n      city : \"Kärsämäki\"\r\n    },\r\n  ];\r\n\r\n  const [ cityList, setCityList ] = useState([]);   // Tässä hallitaan näytettävät kaupungit\r\n\r\n  // Näkymän ensimäisen renderöinnin yhteydessä haetaan kaikki kaupungit, joissa on ravintoloita ja tallennetaan ne useState-hookkiin\r\n  useEffect(() => {\r\n    getData().then(setCityList);\r\n  }, [] );\r\n\r\n  // Funktiolla tullaan hakemaan tietokannasta kaupungit. Testivaiheessa palauttaa hardkkoodatut tiedot\r\n  async function getData() {\r\n    //const results = await axios.get('http://rajapinnanOsoite/');\r\n    return citys;\r\n  }\r\n\r\n  // Hakutoiminnon eventhandler-funktio\r\n  const searchHandler = (searchBarText) => {\r\n    getData().then( function(res){ setCityList( searchEngine(res,searchBarText) ) });\r\n  }\r\n\r\n  // Hakufunktio, jolla haetaan siihen syötetyn tietueen oliot, joiden arvoista löytyy annettu hakusana\r\n  const searchEngine = (citys, searchArgument) => {\r\n    var search = searchArgument.toString().toLowerCase().trim();\r\n    var searchResult = citys.filter(item => {\r\n      return Object.keys(item).some(key => item[key].toString().toLowerCase().includes(search));\r\n    });\r\n    return searchResult;\r\n  }\r\n\r\n  // Funktio, jolla voi luoda random rgb-värin. Kunhan huviksi värkkäilin ja lisäsin muotoilun, joka arpoo jokaiselle kaupunkiboksille eri värin\r\n  function randomColor() {\r\n    let r = Math.round((Math.random() * 255));\r\n    let g = Math.round((Math.random() * 255));\r\n    let b = Math.round((Math.random() * 255));\r\n    return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n  }\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <Header \r\n        onSearchButtonClick={ searchHandler } logIn={ props.loggedIn } logOut={ props.logOut } \r\n        onHeaderButtonClick={ props.headerButtons } shoppingCartItems={ props.shoppingCart }\r\n      />\r\n      <div className=\"marginT120 flex cityBoxContainer\">\r\n        { \r\n          cityList.map((item, index) => {\r\n            return ( \r\n              <div className=\"citySelectionBox\" style={{ backgroundColor: randomColor() }} key={index} onClick={ ()=> props.onSelectClick(item.city) }>\r\n                <h2 className=\"marginT40p\">{ item.city }</h2>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}